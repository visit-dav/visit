# DO NOT EDIT THIS FILE! THIS FILE IS AUTOMATICALLY GENERATED BY xml2cmake
PROJECT(MultiCurve_plot)

ADD_PLOT_CODE_GEN_TARGETS(MultiCurve)

SET(COMMON_SOURCES
MultiCurvePluginInfo.C
MultiCurveCommonPluginInfo.C
MultiCurveAttributes.C
)

SET(LIBI_SOURCES
MultiCurvePluginInfo.C
)

SET(LIBG_SOURCES
MultiCurveGUIPluginInfo.C
QvisMultiCurvePlotWindow.C
${COMMON_SOURCES}
)
SET(LIBG_MOC_SOURCES
QvisMultiCurvePlotWindow.h
)

SET(LIBV_SOURCES
MultiCurveViewerEnginePluginInfo.C
MultiCurveViewerPluginInfo.C
avtMultiCurvePlot.C
avtMultiCurveFilter.C
avtMultiCurveLabelMapper.C
${COMMON_SOURCES}
)

SET(LIBE_SOURCES
MultiCurveViewerEnginePluginInfo.C
MultiCurveEnginePluginInfo.C
avtMultiCurvePlot.C
avtMultiCurveFilter.C
avtMultiCurveLabelMapper.C
${COMMON_SOURCES}
)


INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}
${VISIT_PLOT_INCLUDES}
)

LINK_DIRECTORIES(${VISIT_LIBRARY_DIR} )

ADD_LIBRARY(IMultiCurvePlot ${LIBI_SOURCES})
TARGET_LINK_LIBRARIES(IMultiCurvePlot visitcommon)
SET(INSTALLTARGETS IMultiCurvePlot)

IF(NOT VISIT_SERVER_COMPONENTS_ONLY AND NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)
    QT_WRAP_CPP(GMultiCurvePlot LIBG_SOURCES ${LIBG_MOC_SOURCES})
    ADD_LIBRARY(GMultiCurvePlot ${LIBG_SOURCES})
    TARGET_LINK_LIBRARIES(GMultiCurvePlot visitcommon gui )

    ADD_LIBRARY(VMultiCurvePlot ${LIBV_SOURCES})
    ADD_TARGET_DEFINITIONS(VMultiCurvePlot VIEWER)
    TARGET_LINK_LIBRARIES(VMultiCurvePlot visitcommon viewer )

    SET(INSTALLTARGETS ${INSTALLTARGETS} GMultiCurvePlot VMultiCurvePlot)

    IF(VISIT_PYTHON_SCRIPTING)
        SET(LIBS_SOURCES
            MultiCurveScriptingPluginInfo.C
            PyMultiCurveAttributes.C
            ${COMMON_SOURCES}
        )
        ADD_LIBRARY(SMultiCurvePlot ${LIBS_SOURCES})
        IF(WIN32)
            # This prevents python from #defining snprintf as _snprintf
            SET_TARGET_PROPERTIES(SMultiCurvePlot PROPERTIES COMPILE_DEFINITIONS HAVE_SNPRINTF)
        ENDIF()
        TARGET_LINK_LIBRARIES(SMultiCurvePlot visitcommon visitpy ${PYTHON_LIBRARY})
        SET(INSTALLTARGETS ${INSTALLTARGETS} SMultiCurvePlot)
    ENDIF(VISIT_PYTHON_SCRIPTING)

    IF(VISIT_JAVA)
        FILE(COPY MultiCurveAttributes.java DESTINATION ${JavaClient_BINARY_DIR}/src/plots)
        ADD_CUSTOM_TARGET(JavaMultiCurve ALL ${Java_JAVAC_EXECUTABLE} ${VISIT_Java_FLAGS} -d ${JavaClient_BINARY_DIR} -classpath ${JavaClient_BINARY_DIR} -sourcepath ${JavaClient_BINARY_DIR} MultiCurveAttributes.java
            DEPENDS JavaClient
            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
    ENDIF(VISIT_JAVA)
ENDIF(NOT VISIT_SERVER_COMPONENTS_ONLY AND NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)

ADD_LIBRARY(EMultiCurvePlot_ser ${LIBE_SOURCES})
TARGET_LINK_LIBRARIES(EMultiCurvePlot_ser visitcommon avtpipeline_ser avtplotter_ser )
ADD_TARGET_DEFINITIONS(EMultiCurvePlot_ser ENGINE)
SET(INSTALLTARGETS ${INSTALLTARGETS} EMultiCurvePlot_ser)

IF(VISIT_PARALLEL)
    ADD_PARALLEL_LIBRARY(EMultiCurvePlot_par ${LIBE_SOURCES})
    TARGET_LINK_LIBRARIES(EMultiCurvePlot_par visitcommon avtpipeline_par avtplotter_par )
    ADD_TARGET_DEFINITIONS(EMultiCurvePlot_par ENGINE)
    SET(INSTALLTARGETS ${INSTALLTARGETS} EMultiCurvePlot_par)
ENDIF(VISIT_PARALLEL)

VISIT_INSTALL_PLOT_PLUGINS(${INSTALLTARGETS})
VISIT_PLUGIN_TARGET_OUTPUT_DIR(plots ${INSTALLTARGETS})
VISIT_PLUGIN_TARGET_FOLDER(plots MultiCurve ${INSTALLTARGETS})

