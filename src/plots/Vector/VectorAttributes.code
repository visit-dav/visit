Target: xml2atts
Function: ChangesRequireRecalculation
Declaration: bool ChangesRequireRecalculation(const VectorAttributes &obj);
Definition:
bool
VectorAttributes::ChangesRequireRecalculation(const VectorAttributes &obj)
{
    return ((glyphLocation != obj.glyphLocation) ||
            (useStride != obj.useStride) ||
            (stride != obj.stride) ||
            (glyphLocation != obj.glyphLocation) ||
            (nVectors != obj.nVectors) ||
            (origOnly != obj.origOnly));
}

Function: GetAnimationScale
Declaration: double GetAnimationScale() const;
Definition:
#include <math.h>
double
VectorAttributes::GetAnimationScale() const
{
    const int nsteps = 100;
    double angle = 2.* M_PI * (double(animationStep % nsteps) / double(nsteps-1));
    return 0.75 + 0.25 * cos(angle);
}

Target: xml2info
Function: VectorViewerEnginePluginInfo::SupportsAnimation
Declaration: virtual bool SupportsAnimation() const;
Definition:
// ****************************************************************************
// Method: VectorViewerEnginePluginInfo::SupportsAnimation
//
// Purpose:
//   Tell VisIt that this plot supports animation.
//
// Programmer: Brad Whitlock
// Creation:   Fri Sep 13 11:29:59 PDT 2013
//
// Modifications:
//
// ****************************************************************************

bool
VectorViewerEnginePluginInfo::SupportsAnimation() const
{
    return true;
}

Function: VectorViewerEnginePluginInfo::AnimationReset
Declaration: virtual bool AnimationReset(AttributeSubject *atts, const avtPlotMetaData &plot);
Definition:
// ****************************************************************************
// Method: VectorViewerEnginePluginInfo::AnimationReset
//
// Purpose:
//   Resets the plot's animation.
//
// Arguments:
//   atts : The attribute subject that we may modify.
//   plot : The plot that we're animating.
//
// Returns:  True if the plot attributes changed as a result of reset.
//
// Programmer: Brad Whitlock
// Creation:   Fri Sep 13 11:29:59 PDT 2013
//
// Modifications:
//
// ****************************************************************************
#include <avtPlotMetaData.h>

bool
VectorViewerEnginePluginInfo::AnimationReset(AttributeSubject *atts, const avtPlotMetaData &)
{
    VectorAttributes *cAtts = (VectorAttributes *)atts;
    cAtts->SetAnimationStep(0);
    return true;
}


Function: VectorViewerEnginePluginInfo::AnimationStep
Declaration: virtual bool AnimationStep(AttributeSubject *atts, const avtPlotMetaData &plot);
Definition:
// ****************************************************************************
// Method: VectorViewerEnginePluginInfo::AnimationStep
//
// Purpose:
//   Take an animation step.
//
// Arguments:
//   atts : The attribute subject that we may modify.
//   plot : The plot that we're animating.
//
// Returns:  True if the plot attributes changed.
//
// Programmer: Brad Whitlock
// Creation:   Fri Sep 13 11:29:59 PDT 2013
//
// Modifications:
//
// ****************************************************************************

bool
VectorViewerEnginePluginInfo::AnimationStep(AttributeSubject *atts, const avtPlotMetaData &)
{
    VectorAttributes *cAtts = (VectorAttributes *)atts;
    cAtts->SetAnimationStep(cAtts->GetAnimationStep()+1);
    return true;
}

