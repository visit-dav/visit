Function: ChangesRequireRecalculation
Declaration: bool ChangesRequireRecalculation(const MoleculeAttributes &);
Definition:
bool
MoleculeAttributes::ChangesRequireRecalculation(const MoleculeAttributes &obj)
{
    // Really, we should make sure that this will cause us to add the element
    // or other array as a secondary variable.  This specific test is
    // a little too ready to cause recalculation.
    if (scaleRadiusBy != obj.scaleRadiusBy)
        return true;

    // Same situation here.
    if (radiusVariable != obj.radiusVariable)
        return true;

    return false;
}

Function: ProcessOldVersions
Declaration: virtual void ProcessOldVersions(DataNode *parentNode, const char *configVersion);
Definition:
// ****************************************************************************
// Method: MoleculeAttributes::ProcessOldVersions
//
// Purpose:
//   This method allows handling of older config/session files that may
//   contain fields that are no longer present or have been modified/renamed.
//
// Programmer: Kathleen Biagas
// Creation:   April 4, 2018
//
// Modifications:
//
// ****************************************************************************

void
MoleculeAttributes::ProcessOldVersions(DataNode *parentNode,
                                    const char *configVersion)
{
    if(parentNode == 0)
        return;

    DataNode *searchNode = parentNode->GetNode("MoleculeAttributes");
    if(searchNode == 0)
        return;

    if (VersionLessThan(configVersion, "3.0.0"))
    {
        if (searchNode->GetNode("bondLineStyle") != 0)
            searchNode->RemoveNode("bondLineStyle");
    }
}


Target: xml2python
Code: PyMoleculeAttributes_getattr
Prefix:
Postfix:
    // Try and handle legacy fields

    // bondLineStyle and it's possible enumerations
    bool bondLineStyleFound = false;
    if (strcmp(name, "bondLineStyle") == 0)
    {
        bondLineStyleFound = true;
    }
    else if (strcmp(name, "SOLID") == 0)
    {
        bondLineStyleFound = true;
    }
    else if (strcmp(name, "DASH") == 0)
    {
        bondLineStyleFound = true;
    }
    else if (strcmp(name, "DOT") == 0)
    {
        bondLineStyleFound = true;
    }
    else if (strcmp(name, "DOTDASH") == 0)
    {
        bondLineStyleFound = true;
    }
    if (bondLineStyleFound)
    {
        PyErr_WarnEx(NULL,
            "bondLineStyle is no longer a valid Molecule "
            "attribute.\nIt's value is being ignored, please remove "
            "it from your script.\n", 3);
        return PyInt_FromLong(0L);
    }


Code: PyMoleculeAttributes_setattr
Prefix:
Postfix:
    // Try and handle legacy fields
    if(obj == NULL)
    {
        if(strcmp(name, "bondLineStyle") == 0)
        {
            PyErr_WarnEx(NULL, "'bondLineStyle' is obsolete. It is being ignored.", 3);
            Py_INCREF(Py_None);
            obj = Py_None;
        }
    }


