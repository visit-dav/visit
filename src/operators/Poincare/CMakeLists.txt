# DO NOT EDIT THIS FILE! THIS FILE IS AUTOMATICALLY GENERATED BY xml2cmake
PROJECT(Poincare_operator)

ADD_OPERATOR_CODE_GEN_TARGETS(Poincare)

SET(COMMON_SOURCES
PoincarePluginInfo.C
PoincareCommonPluginInfo.C
PoincareAttributes.C
)

SET(LIBI_SOURCES
PoincarePluginInfo.C
)

SET(LIBG_SOURCES
PoincareGUIPluginInfo.C
QvisPoincareWindow.C
${COMMON_SOURCES}
)
SET(LIBG_MOC_SOURCES
QvisPoincareWindow.h
)

SET(LIBV_SOURCES
PoincareViewerEnginePluginInfo.C
PoincareViewerPluginInfo.C
${COMMON_SOURCES}
)

SET(LIBE_SOURCES
PoincareViewerEnginePluginInfo.C
PoincareEnginePluginInfo.C
avtPoincareFilter.C
FieldlineAnalyzerLib.C
RationalSurfaceLib.C
skelet.C
dir_graph.C
${COMMON_SOURCES}
)


INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}
${VISIT_OPERATOR_INCLUDES}
)

LINK_DIRECTORIES(${VISIT_LIBRARY_DIR} ${NEKTAR++_LIBRARY_DIR} ${NEKTAR++_LIBRARY_DIRS} ${NEKTAR++_TP_LIBRARY_DIRS} ${ACCELERATE_FRAMEWORK_LINK_FLAGS} )

ADD_LIBRARY(IPoincareOperator ${LIBI_SOURCES})
TARGET_LINK_LIBRARIES(IPoincareOperator visitcommon)
SET(INSTALLTARGETS IPoincareOperator)

IF(NOT VISIT_SERVER_COMPONENTS_ONLY AND NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)
    QT_WRAP_CPP(GPoincareOperator LIBG_SOURCES ${LIBG_MOC_SOURCES})
    ADD_LIBRARY(GPoincareOperator ${LIBG_SOURCES})
    TARGET_LINK_LIBRARIES(GPoincareOperator visitcommon gui )

    ADD_LIBRARY(VPoincareOperator ${LIBV_SOURCES})
    ADD_TARGET_DEFINITIONS(VPoincareOperator VIEWER)
    TARGET_LINK_LIBRARIES(VPoincareOperator visitcommon viewer )

    SET(INSTALLTARGETS ${INSTALLTARGETS} GPoincareOperator VPoincareOperator)

    IF(VISIT_PYTHON_SCRIPTING)
        SET(LIBS_SOURCES
            PoincareScriptingPluginInfo.C
            PyPoincareAttributes.C
            ${COMMON_SOURCES}
        )
        ADD_LIBRARY(SPoincareOperator ${LIBS_SOURCES})
        IF(WIN32)
            # This prevents python from #defining snprintf as _snprintf
            SET_TARGET_PROPERTIES(SPoincareOperator PROPERTIES COMPILE_DEFINITIONS HAVE_SNPRINTF)
        ENDIF()
        TARGET_LINK_LIBRARIES(SPoincareOperator visitcommon visitpy ${PYTHON_LIBRARY})
        SET(INSTALLTARGETS ${INSTALLTARGETS} SPoincareOperator)
    ENDIF(VISIT_PYTHON_SCRIPTING)

    IF(VISIT_JAVA)
        FILE(COPY PoincareAttributes.java DESTINATION ${JavaClient_BINARY_DIR}/src/operators)
        ADD_CUSTOM_TARGET(JavaPoincare ALL ${Java_JAVAC_EXECUTABLE} ${VISIT_Java_FLAGS} -d ${JavaClient_BINARY_DIR} -classpath ${JavaClient_BINARY_DIR} -sourcepath ${JavaClient_BINARY_DIR} PoincareAttributes.java
            DEPENDS JavaClient
            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
    ENDIF(VISIT_JAVA)
ENDIF(NOT VISIT_SERVER_COMPONENTS_ONLY AND NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)

ADD_LIBRARY(EPoincareOperator_ser ${LIBE_SOURCES})
TARGET_LINK_LIBRARIES(EPoincareOperator_ser visitcommon avtpipeline_ser avtexpressions_ser avtfilters_ser avtivp_ser )
SET(INSTALLTARGETS ${INSTALLTARGETS} EPoincareOperator_ser)

IF(VISIT_PARALLEL)
    ADD_PARALLEL_LIBRARY(EPoincareOperator_par ${LIBE_SOURCES})
    TARGET_LINK_LIBRARIES(EPoincareOperator_par visitcommon avtpipeline_par avtexpressions_par avtfilters_par avtivp_par )
    SET(INSTALLTARGETS ${INSTALLTARGETS} EPoincareOperator_par)
ENDIF(VISIT_PARALLEL)

VISIT_INSTALL_OPERATOR_PLUGINS(${INSTALLTARGETS})
VISIT_PLUGIN_TARGET_OUTPUT_DIR(operators ${INSTALLTARGETS})
VISIT_PLUGIN_TARGET_FOLDER(operators Poincare ${INSTALLTARGETS})

