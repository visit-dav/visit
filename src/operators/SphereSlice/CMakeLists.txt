# DO NOT EDIT THIS FILE! THIS FILE IS AUTOMATICALLY GENERATED BY xml2cmake
PROJECT(SphereSlice_operator)

ADD_OPERATOR_CODE_GEN_TARGETS(SphereSlice)

SET(COMMON_SOURCES
SphereSlicePluginInfo.C
SphereSliceCommonPluginInfo.C
SphereSliceAttributes.C
)

SET(LIBI_SOURCES
SphereSlicePluginInfo.C
)

SET(LIBG_SOURCES
SphereSliceGUIPluginInfo.C
QvisSphereSliceWindow.C
${COMMON_SOURCES}
)
SET(LIBG_MOC_SOURCES
QvisSphereSliceWindow.h
)

SET(LIBV_SOURCES
SphereSliceViewerEnginePluginInfo.C
SphereSliceViewerPluginInfo.C
${COMMON_SOURCES}
)

SET(LIBE_SOURCES
SphereSliceViewerEnginePluginInfo.C
SphereSliceEnginePluginInfo.C
avtSphereSliceFilter.C
${COMMON_SOURCES}
)


INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}
${VISIT_OPERATOR_INCLUDES}
)

LINK_DIRECTORIES(${VISIT_LIBRARY_DIR} )

ADD_LIBRARY(ISphereSliceOperator ${LIBI_SOURCES})
TARGET_LINK_LIBRARIES(ISphereSliceOperator visitcommon)
SET(INSTALLTARGETS ISphereSliceOperator)

IF(NOT VISIT_SERVER_COMPONENTS_ONLY AND NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)
    QT_WRAP_CPP(GSphereSliceOperator LIBG_SOURCES ${LIBG_MOC_SOURCES})
    ADD_LIBRARY(GSphereSliceOperator ${LIBG_SOURCES})
    TARGET_LINK_LIBRARIES(GSphereSliceOperator visitcommon gui )

    ADD_LIBRARY(VSphereSliceOperator ${LIBV_SOURCES})
    ADD_TARGET_DEFINITIONS(VSphereSliceOperator VIEWER)
    TARGET_LINK_LIBRARIES(VSphereSliceOperator visitcommon viewer )

    SET(INSTALLTARGETS ${INSTALLTARGETS} GSphereSliceOperator VSphereSliceOperator)

    IF(VISIT_PYTHON_SCRIPTING)
        SET(LIBS_SOURCES
            SphereSliceScriptingPluginInfo.C
            PySphereSliceAttributes.C
            ${COMMON_SOURCES}
        )
        ADD_LIBRARY(SSphereSliceOperator ${LIBS_SOURCES})
        IF(WIN32)
            # This prevents python from #defining snprintf as _snprintf
            SET_TARGET_PROPERTIES(SSphereSliceOperator PROPERTIES COMPILE_DEFINITIONS HAVE_SNPRINTF)
        ENDIF()
        TARGET_LINK_LIBRARIES(SSphereSliceOperator visitcommon visitpy ${PYTHON_LIBRARY})
        SET(INSTALLTARGETS ${INSTALLTARGETS} SSphereSliceOperator)
    ENDIF(VISIT_PYTHON_SCRIPTING)

    IF(VISIT_JAVA)
        FILE(COPY SphereSliceAttributes.java DESTINATION ${JavaClient_BINARY_DIR}/src/operators)
        ADD_CUSTOM_TARGET(JavaSphereSlice ALL ${Java_JAVAC_EXECUTABLE} ${VISIT_Java_FLAGS} -d ${JavaClient_BINARY_DIR} -classpath ${JavaClient_BINARY_DIR} -sourcepath ${JavaClient_BINARY_DIR} SphereSliceAttributes.java
            DEPENDS JavaClient
            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
    ENDIF(VISIT_JAVA)
ENDIF(NOT VISIT_SERVER_COMPONENTS_ONLY AND NOT VISIT_ENGINE_ONLY AND NOT VISIT_DBIO_ONLY)

ADD_LIBRARY(ESphereSliceOperator_ser ${LIBE_SOURCES})
TARGET_LINK_LIBRARIES(ESphereSliceOperator_ser visitcommon avtpipeline_ser avtexpressions_ser avtfilters_ser )
SET(INSTALLTARGETS ${INSTALLTARGETS} ESphereSliceOperator_ser)

IF(VISIT_PARALLEL)
    ADD_PARALLEL_LIBRARY(ESphereSliceOperator_par ${LIBE_SOURCES})
    TARGET_LINK_LIBRARIES(ESphereSliceOperator_par visitcommon avtpipeline_par avtexpressions_par avtfilters_par )
    SET(INSTALLTARGETS ${INSTALLTARGETS} ESphereSliceOperator_par)
ENDIF(VISIT_PARALLEL)

VISIT_INSTALL_OPERATOR_PLUGINS(${INSTALLTARGETS})
VISIT_PLUGIN_TARGET_OUTPUT_DIR(operators ${INSTALLTARGETS})
VISIT_PLUGIN_TARGET_FOLDER(operators SphereSlice ${INSTALLTARGETS})

